version: '3.9'

networks:
  test-network:
    driver: bridge

services:
  rangiffler-all-db:
    container_name: rangiffler-all-db
    image: postgres:15.1
    environment:
      - POSTGRES_MULTIPLE_DATABASES="rangiffler-auth","rangiffler-currency","rangiffler-spend","rangiffler-userdata"
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 3s
      timeout: 3s
      retries: 5
    expose:
      - "5432"
    networks:
      - test-network
    dns_search: .

  auth.rangiffler.dc:
    container_name: auth.rangiffler.dc
    image: nelakov/rangiffler-auth:latest
    ports:
      - "9000:9000"
    healthcheck:
      test: "wget --spider http://localhost:9000/actuator/health || exit 1"
      interval: 5s
      timeout: 5s
      retries: 10
    depends_on:
      rangiffler-all-db:
        condition: service_healthy
    networks:
      - test-network
    dns_search: .

  currency.rangiffler.dc:
    container_name: currency.rangiffler.dc
    image: nelakov/rangiffler-currency:latest
    expose:
      - "8091"
      - "8092"
    depends_on:
      rangiffler-all-db:
        condition: service_healthy
    networks:
      - test-network
    dns_search: .

  gateway.rangiffler.dc:
    container_name: gateway.rangiffler.dc
    image: nelakov/rangiffler-gateway:latest
    ports:
      - "8090:8090"
    depends_on:
      auth.rangiffler.dc:
        condition: service_started
    networks:
      - test-network
    dns_search: .

  spend.rangiffler.dc:
    container_name: spend.rangiffler.dc
    image: nelakov/rangiffler-spend:latest
    expose:
      - "8093"
    depends_on:
      rangiffler-all-db:
        condition: service_healthy
    networks:
      - test-network
    dns_search: .

  userdata.rangiffler.dc:
    container_name: userdata.rangiffler.dc
    image: nelakov/rangiffler-userdata:latest
    expose:
      - "8089"
    depends_on:
      rangiffler-all-db:
        condition: service_healthy
    networks:
      - test-network
    dns_search: .

  frontend.rangiffler.dc:
    container_name: frontend.rangiffler.dc
    image: nelakov/rangiffler-frontend-test:latest
    ports:
      - "80:80"
    depends_on:
      gateway.rangiffler.dc:
        condition: service_started
    networks:
      - test-network
    dns_search: .

  selenoid:
    container_name: selenoid
    image: aerokube/selenoid:1.10.12
    platform: "${ARCH}"
    volumes:
      - ./selenoid:/etc/selenoid
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    command: [ "-conf", "/etc/selenoid/browsers.json", "-limit", "3", "-video-output-dir", "/opt/selenoid/video", "-log-output-dir", "/opt/selenoid/logs", "-container-network", "rangiffler-st2_test-network" ]
    ports:
      - "4444:4444"
    networks:
      - test-network
    dns_search: .

  selenoid-ui:
    container_name: selenoid-ui
    image: aerokube/selenoid-ui:1.10.9
    depends_on:
      - selenoid
    restart: unless-stopped
    ports:
      - "9090:8080"
    command: [ "--selenoid-uri", "http://selenoid:4444" ]
    networks:
      - test-network
    dns_search: .

  rangiffler-e-2-e:
    container_name: rangiffler-e-2-e
    image: nelakov/rangiffler-e-2-e-tests
    depends_on:
      frontend.rangiffler.dc:
        condition: service_started
    networks:
      - test-network
    dns_search: .

  allure:
    container_name: allure
    image: frankescobar/allure-docker-service
    depends_on:
      - rangiffler-e-2-e
    environment:
      CHECK_RESULTS_EVERY_SECONDS: 3
      KEEP_HISTORY: 0
    ports:
      - "5050:5050"
    networks:
      - test-network
    dns_search: .

plugins {
    id 'java'
    alias(libs.plugins.spring.boot)
    alias(libs.plugins.spring.dependency.management)
    alias(libs.plugins.lombok)
    alias(libs.plugins.docker)
}

group = libs.versions.group.get()
version = libs.versions.app.get()

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation project(path: ':rangiffler-grpc-common')
    implementation(
            libs.spring.boot.starter,
            libs.spring.webflux.starter,
            libs.spring.actuator.starter,
            libs.spring.validation.starter,
            libs.spring.oauth2.starter,
            libs.spring.security.starter
    )
    implementation (libs.spring.boot.services.starter) {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation(
            libs.spring.grpc.client.starter,
            libs.reactor.netty
    )
}

docker {
    dependsOn build
    name "nelakov/rangiffler-gateway:${project.version}"
    tag 'latest', 'nelakov/rangiffler-gateway:latest'
    files bootJar.archiveFile
    buildArgs([APP_VER: project.version, DOCKER: project.ext.dockerImage])
    noCache true
}

task dockerRmi(type: Exec) {
    workingDir "${buildDir}"
    commandLine 'bash', '-c', "docker rmi -f \$(docker images | grep 'rangiffler')\n"
}

task runTestsByTag(type: Test) {
    if (System.getProperty("test")) {
        useJUnitPlatform { includeTags System.getProperty("test") }
    } else {
        useJUnitPlatform()
    }
    systemProperties System.getProperties()
}